// app/api/admin/login/route.ts
import { NextRequest, NextResponse } from 'next/server'
import { validateCredentials, createSession } from '@/lib/auth'

export async function POST(req: NextRequest) {
  try {
    const { login, password } = await req.json()

    if (!login || !password) {
      return NextResponse.json(
        { error: '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' },
        { status: 400 }
      )
    }

    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('üîç Debug –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:')
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –ª–æ–≥–∏–Ω:', login)
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å (–ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):', password.substring(0, 10))
    console.log('ADMIN_LOGIN –∏–∑ env:', process.env.ADMIN_LOGIN)
    console.log('ADMIN_PASSWORD –∏–∑ env (–ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):', process.env.ADMIN_PASSWORD?.substring(0, 10))
    console.log('–õ–æ–≥–∏–Ω —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', login === process.env.ADMIN_LOGIN)
    console.log('–ü–∞—Ä–æ–ª—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', password === process.env.ADMIN_PASSWORD)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!validateCredentials(login, password)) {
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞')
      return NextResponse.json(
        { error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' },
        { status: 401 }
      )
    }

    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')

    // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    await createSession()

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    )
  }
}