# docker-compose.yml для полного стека
version: '3.8'

services:
  # Next.js приложение
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://drumschool:${DB_PASSWORD}@db:5432/drumschool
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_APP_PASSWORD=${EMAIL_APP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_LOGIN=${ADMIN_LOGIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - AUTH_SECRET=${AUTH_SECRET}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - drum-network

  # PostgreSQL база данных
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=drumschool
      - POSTGRES_USER=drumschool
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - drum-network

  # Nginx reverse proxy + SSL
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - drum-network

volumes:
  postgres_data:

networks:
  drum-network:
    driver: bridge